- hosts: localhost
  vars:
    source_key: "./.ssh/id_ed25519"
    dest_key: "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519"
    personal: "{{ lookup('env', 'HOME') }}/repos/personal"
    user: "jacob"
    github_account: "Japenner"
    apt_packages:
      core:
        - build-essential
        - cmake
        - pkg-config
        - libpthread-stubs0-dev
        - lua5.1
        - unzip
        - libtool
        - libtool-bin
        - gettext
        - compton
        - curl
        - htop
        - golang
        - lsof
        - ccache
        - ninja-build
        - python3-pip
        - dconf-editor
        - nvidia-settings
        - moreutils
        - clangd
      productivity:
        - tmux
        - wireshark
        - fzf
        - xclip
        - tldr
        - ripgrep
    docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    zsh_plugins:
      - name: zsh-autosuggestions
        repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
      - name: zsh-nvm
        repo: "https://github.com/lukechilds/zsh-nvm.git"
      - name: zsh-syntax-highlighting
        repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
    asdf_dependencies:
      - curl
      - git
    project_repos:
      - name: jp_com
        repo: "git@github.com:{{ github_account }}/jp_com.git"
      - name: obsidian
        repo: "git@github.com:{{ github_account }}/obsidian.git"
      - name: homelab
        repo: "git@github.com:{{ github_account }}/homelab.git"
  pre_tasks:
    - name: Update Apt
      become: true
      apt:
        force_apt_get: true
        update_cache: true
        state: present
      tags: install

  tasks:
    # SSH Setup
    - name: Ensure .ssh directory and keys are set up
      file:
        dest: "{{ dest_key | dirname }}"
        mode: 0700
        state: directory
      tags: ssh

    - name: Copy SSH keys
      copy:
        src: "{{ item }}"
        dest: "{{ dest_key }}{{ item.split('.')[-1] }}"
        mode: "{{ '0600' if 'pub' not in item else '0644' }}"
      loop:
        - "{{ source_key }}"
        - "{{ source_key }}.pub"
      tags: ssh

    - name: Set authorized key from file
      authorized_key:
        user: "{{ user }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"
      tags: ssh

    - name: Add GitHub to known hosts
      shell: "ssh-keyscan -H github.com >> {{ lookup('env', 'HOME') }}/.ssh/known_hosts"
      args:
        creates: "{{ lookup('env', 'HOME') }}/.ssh/known_hosts"
      tags: ssh

    # Git Setup
    - name: Configure global git settings
      git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: global
      loop:
        - { name: user.email, value: "japenner@gmail.com" }
        - { name: user.name, value: "Jacob Penner" }
      tags: git

    # Install System Packages
    - name: Install core packages
      become: true
      apt:
        name: "{{ apt_packages.core }}"
        state: present
        update_cache: true
      tags: core

    - name: Install productivity packages
      become: true
      apt:
        name: "{{ apt_packages.productivity }}"
        state: present
        update_cache: true
      tags: productivity

    # GitHub CLI Setup
    - name: Install GitHub CLI
      become: true
      apt:
        name: gh
        state: present
      tags: cli

    # Obsidian App Setup
    - name: Download Obsidian
      get_url:
        url: "https://github.com/obsidianmd/obsidian-releases/releases/download/v1.7.4/obsidian_1.7.4_amd64.deb"
        dest: /tmp/obsidian.deb
        mode: "0644"
      tags: obsidian

    - name: Install Obsidian
      become: true
      apt:
        deb: /tmp/obsidian.deb
        state: present
      tags: obsidian

    # Lazydocker CLI Setup
    - name: Download Lazydocker
      become: true
      get_url:
        url: "https://github.com/jesseduffield/lazydocker/releases/download/v0.23.3/lazydocker_0.23.3_Linux_x86_64.tar.gz"
        dest: /tmp/lazydocker.tar.gz
      tags: lazydocker

    - name: Extract and Install Lazydocker
      become: true
      unarchive:
        src: /tmp/lazydocker.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
      args:
        creates: /usr/local/bin/lazydocker
      tags: lazydocker

    # Docker Setup
    - name: Remove Docker related packages
      become: true
      apt:
        name: "{{ item }}"
        state: absent
      loop:
        - docker.io
        - docker-doc
        - podman-docker
        - containerd
        - runc
      tags: docker

    - name: Install Docker prerequisites and GPG key
      become: true
      apt:
        name: ["ca-certificates", "curl", "gnupg"]
        state: present
      tags: docker

    - name: Download Docker GPG key and setup repository
      block:
        - name: Create directory for Docker GPG key
          file:
            path: /etc/apt/keyrings
            state: directory
            mode: "0755"

        - name: Add Docker GPG key
          get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: "0644"

        - name: Add Docker APT source list
          shell: |
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
          args:
            creates: /etc/apt/sources.list.d/docker.list
      tags: docker

    - name: Install Docker packages
      become: true
      apt:
        name: "{{ docker_packages }}"
        state: present
      tags: docker

    - name: Ensure Docker service is running and user is added
      block:
        - service:
            name: docker
            state: started
            enabled: true
        - user:
            name: "{{ user }}"
            groups: docker
            append: true
      tags: docker

    # ZSH & Oh-My-Zsh Setup
    - name: Install ZSH and change shell
      block:
        - name: Install ZSH
          apt:
            name: zsh
            state: present
          become: true

        - name: Change shell to ZSH
          shell: chsh -s $(which zsh) "{{ user }}"

        - name: Install Oh-My-Zsh if missing
          shell: |
            if [ ! -d /home/{{ user }}/.oh-my-zsh ]; then
              sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)";
            fi
          args:
            creates: "/home/{{ user }}/.oh-my-zsh"
      tags: zsh

    # Projects Checkout
    - name: Clone personal repositories
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "{{ personal }}/{{ item.name }}"
        update: yes
      loop: "{{ project_repos }}"
      tags: projects
